---
title: Pivotting data
subtitle: "[[ANU BDSI<br>workshop]{.tag-label} Data Wrangling with R [Part 1]{.part-label}]{.tag-workshop}"
format:
  anu-light-revealjs:
    width: 1920
    height: 1080
    auto-stretch: false
    html-math-method: katex
    self-contained: true
    css: 
     - assets/custom.css
     - assets/table.css
    footer: anu-bdsi.github.io/workshop-data-wrangling-R1/
author: Emi Tanaka
institute: Biological Data Science Institute
date: 2024/04/08
date-format: "D[th] MMMM YYYY"
filters:
  - webr
execute: 
  echo: true
webr: 
  show-startup-message: false  
  packages: 
    - tidyverse
---



## {{< fa crosshairs >}} Current learning objective

```{webr-r}
#| context: setup
df_wide <- tibble::tibble(state = c("NSW", "VIC", "ACT"),
                          `2019` = c(8130159, 6655284, 427892),
                          `2018` = c(80366651, 6528601, 423169),
                          `2017` = c(7919815, 6387081, 415874))

df_long <- data.frame(state = c("NSW", "NSW", "NSW", "VIC", "VIC", "VIC", "ACT", "ACT", "ACT"),
                      year = c("2019", "2018", "2017", "2019", 
                               "2018", "2017", "2019", "2018", "2017"), 
                      population = c(8130159, 80366651, 7919815, 6655284, 6528601, 6387081, 427892, 423169, 415874))

yield_long <- data.frame(year = c(1900, 1900, 2000, 1900, 1900, 2000, 2000),
                         state = c("Iowa", "Kansas", "Kansas", "Iowa", "Kansas", "Iowa", "Kansas"),
                         crop = c("barley", "barley", "barley", "wheat", "wheat", "wheat", "wheat"),
                         yield = c(28.5, 18, 35, 14.4, 18.2, 47, 37))

yield_wide <- data.frame(year = c(1900, 1900, 2000, 2000), 
                         state = c("Iowa", "Kansas", "Kansas", "Iowa"),
                         barley_yield = c(28.5, 18, 35, NA), 
                         wheat_yield = c(14.4, 18.2, 37, 47))

crop_long <- data.frame(year = c(1900L, 1900L, 1900L, 1900L, 2000L, 2000L, 1900L, 1900L, 1900L, 1900L, 2000L, 2000L, 2000L, 2000L),
                        state = c("Iowa", "Iowa", "Kansas", "Kansas", "Kansas", "Kansas", "Iowa", "Iowa", "Kansas", "Kansas", "Iowa", "Iowa", "Kansas", "Kansas"),
                        crop = c("barley", "barley", "barley", "barley", "barley", "barley", "wheat", "wheat", "wheat", "wheat", "wheat", "wheat", "wheat", "wheat"),
                        metric = c("yield", "acres", "yield", "acres", "yield", "acres", "yield", "acres", "yield", "acres", "yield", "acres", "yield", "acres"),
                        value = c(28.5, 620000, 18, 127000, 35, 7000, 14.4, 1450000, 18.2, 4290000, 47, 18000, 37, 9400000))

crop_wide <- data.frame(year = c(1900L, 1900L, 2000L, 2000L), 
                        state = c("Iowa", "Kansas", "Kansas", "Iowa"), 
                        barley_yield = c(28.5, 18, 35, NA), 
                        wheat_yield = c(14.4, 18.2, 37, 47), 
                        barley_acres = c(620000, 127000, 7000, NA), 
                        wheat_acres = c(1450000, 4290000, 9400000, 18000))

crop_tidy <- data.frame(year = c(1900L, 1900L, 2000L, 1900L, 1900L, 2000L, 2000L),
                        state = c("Iowa", "Kansas", "Kansas", "Iowa", "Kansas", "Iowa", "Kansas"), 
                        crop = c("barley", "barley", "barley", "wheat", "wheat", "wheat", "wheat"), 
                        yield = c(28.5, 18, 35, 14.4, 18.2, 47, 37), 
                        acres = c(620000, 127000, 7000, 1450000, 4290000, 18000, 
9400000))

author_dat <- data.frame(package = c("dplyr", "magrittr", "rlang", "stringr", "tibble", "tidyr", "tidyselect"), 
                         author = c("Hadley Wickham, Romain François, Lionel Henry, Kirill Müller", "Lionel Henry, Stefan Milton Bache, Hadley Wickham", "Lionel Henry, Hadley Wickham", "Hadley Wickham", "Kirill Müller, Hadley Wickham", "Hadley Wickham", "Lionel Henry, Hadley Wickham"))

```

```{r}
#| echo: false
crop_tidy <- data.frame(year = c(1900L, 1900L, 2000L, 1900L, 1900L, 2000L, 2000L),
                        state = c("Iowa", "Kansas", "Kansas", "Iowa", "Kansas", "Iowa", "Kansas"), 
                        crop = c("barley", "barley", "barley", "wheat", "wheat", "wheat", "wheat"), 
                        yield = c(28.5, 18, 35, 14.4, 18.2, 47, 37), 
                        acres = c(620000, 127000, 7000, 1450000, 4290000, 18000, 
9400000))

pkg_dat <- data.frame(package = c("dplyr", "magrittr", "rlang", "stringr", "tibble", "tidyr", "tidyselect"), 
                      maintainer = c("Hadley Wickham", "Lionel Henry", "Lionel Henry", "Hadley Wickham", "Kirill Müller", "Hadley Wickham", "Lionel Henry"))

```

```{r}
#| include: false
library(tidyverse)
source("setup.R")
```


```{r}
#| results: asis 
#| echo: false
learning_objectives(4)
```


## Tidy data 

::: callout-note

## Definition of a tidy data (Wickham, 2014)

* Each variable must have its own column
* Each observation must have its own row
* Each value must have its own cell

:::

<center>
<img src="images/tidy-data.svg" width="90%">
</center>

- Tidyverse functions are designed to work with tidy data.


::: {.absolute bottom=0 .f3}

Wickham (2014) Tidy Data. *Journal of Statistical Software*

:::




## Evolving language

* Earlier efforts to transform data from wide to long was in the `reshape`, first released on CRAN in 2005-08-05.
* It was then superseded by `reshape2` released on CRAN in 2010-09-10.
* Then finally `tidyr` released on CRAN in 2014-07-21 [[<sup>*</sup>v1.0.0 released 2019-09-12](https://www.tidyverse.org/blog/2019/09/tidyr-1-0-0/)]{.f3}.

::: {.flex .fragment}

::: {.w-50}

**Wide to long**

* `reshape::melt` <img src="images/lifecycle-retired.png">
* `reshape2::melt` <img src="images/lifecycle-retired.png">
* `tidyr::gather` <img src="images/lifecycle-retired.png">
* **`tidyr::pivot_longer`**<sup>*</sup>



:::

::: {.w-50 .pl3}

**Long to wide**

* `reshape::cast` <img src="images/lifecycle-retired.png">
* `reshape2::dcast` <img src="images/lifecycle-retired.png">
* `tidyr::spread` <img src="images/lifecycle-retired.png">
* **`tidyr::pivot_wider`**<sup>*</sup>


:::

:::






::: {.absolute bottom=0 .f3}

Hadley Wickham (2020). tidyr: Tidy Messy Data. R
  package version 1.1.2.
  
Hadley Wickham (2007). Reshaping Data with the reshape
  Package. Journal of Statistical Software, 21(12), 1-20
  
:::


## Lifecycle

::: flex

::: {.w-40 .f4}

<img src="https://raw.githubusercontent.com/r-lib/lifecycle/master/vignettes/figures/lifecycle.svg">


<img src="https://raw.githubusercontent.com/r-lib/lifecycle/master/man/figures/lifecycle-deprecated.svg">
<img src="https://raw.githubusercontent.com/r-lib/lifecycle/master/man/figures/lifecycle-experimental.svg">
<img src="https://raw.githubusercontent.com/r-lib/lifecycle/master/man/figures/lifecycle-stable.svg">
<img src="https://raw.githubusercontent.com/r-lib/lifecycle/master/man/figures/lifecycle-superseded.svg">

:::

::: {.w-60 .pl3}


* Functions (and sometimes arguments of functions) in `tidyverse` packages often are labelled with a badge like on the left


:::

:::


```{webr-r}
help(mutate_each, package = "dplyr") # deprecated
help(sample_frac, package = "dplyr") # superseded
help(mutate, package = "dplyr") # look the .by argument
```




::: {.absolute bottom=0 .f3}

Lionel Henry (2020). lifecycle: Manage the Life Cycle of your Package Functions. R package version 0.2.0.

:::



## Pivotting data with `tidyr` [Part 1]{.f2}


::: flex

::: {.w-30}

::: f3

```{r}
#| code-fold: true
#| code-summary: "Data"
df_wide <- tibble::tibble(state = c("NSW", "VIC", "ACT"),
                          `2019` = c(8130159, 6655284, 427892),
                          `2018` = c(80366651, 6528601, 423169),
                          `2017` = c(7919815, 6387081, 415874))

df_long <- data.frame(state = c("NSW", "NSW", "NSW", "VIC", "VIC", "VIC", "ACT", "ACT", "ACT"),
                      year = c("2019", "2018", "2017", "2019", 
                               "2018", "2017", "2019", "2018", "2017"), 
                      population = c(8130159, 80366651, 7919815, 6655284, 6528601, 6387081, 427892, 423169, 415874))
```

:::

```{r, echo = FALSE}
knitr::kable(df_wide, caption = "df_wide") %>% 
  kableExtra::kable_styling()
```

```{r, echo = FALSE}
knitr::kable(df_long, caption = "df_long") %>% 
  kableExtra::kable_styling()
```

:::



::: {.w-70 .pl3}





```{webr-r}
df_wide
df_long

df_wide |> pivot_longer(cols = `2019`:`2017`, 
                        names_to = "year",
                        values_to = "population")

df_long |> pivot_wider(id_cols = state,
                       names_from = year, 
                       values_from = population)
```

:::

:::


::: {.absolute bottom=0 .f3}

Values adapted from Australian Bureau of Statistics. (2020). Table 04. Estimated Resident Population, States and Territories [Time series spreadsheet]. National, state and territory population, Australia Mar 2020. Retrieved Nov 24, 2020. https://www.abs.gov.au/statistics/people/population/national-state-and-territory-population/mar-2020/310104.xls

:::



## Pivotting data with `tidyr` [Part 2]{.f2}

::: flex

::: {.w-40}

::: f3

```{r}
#| code-fold: true
#| code-summary: "Data"
yield_long <- data.frame(year = c(1900, 1900, 2000, 1900, 1900, 2000, 2000),
                         state = c("Iowa", "Kansas", "Kansas", "Iowa", "Kansas", "Iowa", "Kansas"),
                         crop = c("barley", "barley", "barley", "wheat", "wheat", "wheat", "wheat"),
                         yield = c(28.5, 18, 35, 14.4, 18.2, 47, 37))
```

```{r yield-wide}
#| echo: false
yield_wide <- data.frame(year = c(1900, 1900, 2000, 2000), 
                         state = c("Iowa", "Kansas", "Kansas", "Iowa"),
                         barley_yield = c(28.5, 18, 35, NA), 
                         wheat_yield = c(14.4, 18.2, 37, 47))
```


:::

```{r, echo = FALSE}
knitr::kable(yield_long, caption = "yield_long") %>% 
  kableExtra::kable_styling()
```

```{r, echo = FALSE}
knitr::kable(yield_wide, caption = "yield_wide") %>% 
  kableExtra::kable_styling()
```

:::

::: {.w-60 .pl3}



yield_long {{< fa arrow-right >}} yield_wide


```{webr-r}
yield_long

yield_long |> 
  pivot_wider(id_cols = c(year, state),
              names_from = crop, 
              values_from = yield, 
              names_glue = "{crop}_yield")
```

:::

:::


::: {.absolute bottom=0 .f3}

United States Department of Agriculture, National Agricultural Statistics Service. http://quickstats.nass.usda.gov/

Kevin Wright (2020). agridat: Agricultural Datasets. R package version 1.17

:::


## Pivotting data with `tidyr` [Part 3]{.f2} 

::: flex

::: {.w-40}

::: f3

```{r yield-wide}
#| code-fold: true
#| code-summary: "Data"
```

:::

```{r, echo = FALSE}
knitr::kable(yield_wide, caption = "yield_wide") %>% 
  kableExtra::kable_styling()
```

```{r, echo = FALSE}
knitr::kable(yield_long, caption = "yield_long") %>% 
  kableExtra::kable_styling()
```



:::

::: {.w-60 .pl3}


yield_wide <i class="fas fa-arrow-right"></i> yield_long

```{webr-r}
yield_wide

pivot_longer(yield_wide, 
             cols = contains("yield"), 
             names_to = "crop", 
             names_pattern = "(.+)_yield",  
             values_to = "yield", 
             values_drop_na = TRUE)
```


:::

:::



::: {.absolute bottom=0 .f3}

United States Department of Agriculture, National Agricultural Statistics Service. http://quickstats.nass.usda.gov/

Kevin Wright (2020). agridat: Agricultural Datasets. R package version 1.17

:::


## Pivotting data with `tidyr` [Part 4]{.f2}

::: flex

::: {.w-45}

::: f3

```{r crop-long}
#| code-fold: true
#| code-summary: "Data"
crop_long <- data.frame(year = c(1900L, 1900L, 1900L, 1900L, 2000L, 2000L, 1900L, 1900L, 1900L, 1900L, 2000L, 2000L, 2000L, 2000L),
                        state = c("Iowa", "Iowa", "Kansas", "Kansas", "Kansas", "Kansas", "Iowa", "Iowa", "Kansas", "Kansas", "Iowa", "Iowa", "Kansas", "Kansas"),
                        crop = c("barley", "barley", "barley", "barley", "barley", "barley", "wheat", "wheat", "wheat", "wheat", "wheat", "wheat", "wheat", "wheat"),
                        metric = c("yield", "acres", "yield", "acres", "yield", "acres", "yield", "acres", "yield", "acres", "yield", "acres", "yield", "acres"),
                        value = c(28.5, 620000, 18, 127000, 35, 7000, 14.4, 1450000, 18.2, 4290000, 47, 18000, 37, 9400000))


```

```{r crop-wide}
#| echo: false
crop_wide <- data.frame(year = c(1900L, 1900L, 2000L, 2000L), 
                        state = c("Iowa", "Kansas", "Kansas", "Iowa"), 
                        barley_yield = c(28.5, 18, 35, NA), 
                        wheat_yield = c(14.4, 18.2, 37, 47), 
                        barley_acres = c(620000, 127000, 7000, NA), 
                        wheat_acres = c(1450000, 4290000, 9400000, 18000))
```


:::

```{r, echo = FALSE}
crop_long  %>% 
  mutate(value = scales::comma(value)) %>% 
  knitr::kable(caption = "crop_long", align = "lllr") %>% 
  kableExtra::kable_styling()
  
```

:::

::: {.w-55 .pl3}

```{r, echo = FALSE}
crop_wide %>% 
  knitr::kable(caption = "crop_wide") %>% 
  kableExtra::kable_styling()
```

crop_long <i class="fas fa-arrow-right"></i> crop_wide

```{webr-r}
crop_long

pivot_wider(crop_long, 
            names_from = c(crop, metric), 
            values_from = value, 
            names_glue = "{crop}_{metric}") 
```


:::

:::


::: {.absolute bottom=0 .f3 style="background-color:white;"}

United States Department of Agriculture, National Agricultural Statistics Service. http://quickstats.nass.usda.gov/

Kevin Wright (2020). agridat: Agricultural Datasets. R package version 1.17

:::



## Pivotting data with `tidyr` [Part 5]{.f2}

::: flex

::: {.w-55 .pl3}

::: f3

```{r crop-wide}
#| code-fold: true
#| code-summary: "Data"
```

:::

```{r, echo = FALSE}
crop_wide %>% 
  knitr::kable(caption = "crop_wide") %>% 
  kableExtra::kable_styling()
```

crop_wide <i class="fas fa-arrow-right"></i> crop_long

```{webr-r}
crop_wide

pivot_longer(crop_wide, 
             cols = -c(year, state),
             names_to = c("crop", "metric"), 
             names_pattern = "(.+)_(.+)",
             values_to = "value")
```


:::

::: {.w-45}



```{r, echo = FALSE}
crop_long %>% 
  mutate(value = scales::comma(value)) %>% 
  knitr::kable(caption = "crop_long", align = "lllr") %>% 
  kableExtra::kable_styling()
  
```

:::



:::


::: {.absolute bottom=0 .f3 style="background-color:white;"}

United States Department of Agriculture, National Agricultural Statistics Service. http://quickstats.nass.usda.gov/

Kevin Wright (2020). agridat: Agricultural Datasets. R package version 1.17

:::

## Pivotting data with `tidyr` [Part 6]{.f2}

::: flex

::: {.w-45 .pl3}

::: f3

```{r crop-long}
#| code-fold: true
#| code-summary: "Data"
```

:::

```{r, echo = FALSE}
crop_long %>% 
  knitr::kable(caption = "crop_long") %>% 
  kableExtra::kable_styling()
```




:::

::: {.w-55}


```{r, echo = FALSE}
crop_tidy %>% 
  knitr::kable(caption = "crop_tidy") %>% 
  kableExtra::kable_styling()
  
```

crop_long <i class="fas fa-arrow-right"></i> crop_tidy

```{webr-r}
crop_long |> 
  pivot_wider(id_cols = c(year, state, crop), 
              values_from = value, 
              names_from = metric)
```

:::



:::


::: {.absolute bottom=0 .f3 style="background-color:white;"}

United States Department of Agriculture, National Agricultural Statistics Service. http://quickstats.nass.usda.gov/

Kevin Wright (2020). agridat: Agricultural Datasets. R package version 1.17

:::



## Separate values into columns 

::: flex

::: {.w-30}

::: f3

```{r}
#| code-fold: true
#| code-summary: "Data"
pkg_dat <- data.frame(package = c("dplyr", "magrittr", "rlang", "stringr", "tibble", "tidyr", "tidyselect"), 
                      maintainer = c("Hadley Wickham", "Lionel Henry", "Lionel Henry", "Hadley Wickham", "Kirill Müller", "Hadley Wickham", "Lionel Henry"))
```

:::

```{r, echo = FALSE}
pkg_dat %>% 
  knitr::kable(caption = "pkg_dat") %>% 
  kableExtra::kable_styling()
```


:::

::: {.w-70 .pl3 .fragment}

🎯 separate maintainer name to columns, first name and last name


```{webr-r}
pkg_dat |>  
  separate(maintainer, 
           into = c("first_name", "last_name"),
           sep = " ")
```

:::

:::



## Separate values into rows

::: flex

::: {.w-40}

::: f3

```{r}
#| code-fold: true
#| code-summary: "Data"
author_dat <- data.frame(package = c("dplyr", "magrittr", "rlang", "stringr", "tibble", "tidyr", "tidyselect"), 
                         author = c("Hadley Wickham, Romain François, Lionel Henry, Kirill Müller", "Lionel Henry, Stefan Milton Bache, Hadley Wickham", "Lionel Henry, Hadley Wickham", "Hadley Wickham", "Kirill Müller, Hadley Wickham", "Hadley Wickham", "Lionel Henry, Hadley Wickham"))
```

:::


```{r, echo = FALSE}
author_dat %>% 
  knitr::kable(caption = "author_dat") %>% 
  kableExtra::kable_styling()
```


:::

::: {.w-60 .pl3 .fragment}

```{webr-r}
author_dat |>  
  separate_rows(author, sep = ", ")
```


:::

:::

## Summary

::: flex

::: {.w-50}

- `tidyr` package provides tools for data cleaning and reshaping.
- `pivot_longer()` and `pivot_wider()` are used to convert data between long and wide formats.
- `separate()` and `separate_rows()` functions are used to split a single column into multiple columns or rows.

:::

::: {.w-50 .pl3}

<center>

![](images/tidyr-pivoting.gif)

</center>

:::

:::




::: aside

Animation from [tidyexplain](https://github.com/gadenbuie/tidyexplain/tree/main) by Garrick Aden-Buie.

:::



## `tidyr` cheatsheet

::: flex

::: {.w-50}

![](assets/tidyr-cheatsheet_Page_1.png){.ba}

:::

::: {.w-50 .pl3}

![](assets/tidyr-cheatsheet_Page_2.png){.ba}


:::

:::

::: aside

[<i class='fas fa-file-pdf'></i> dplyr cheatsheet](assets/tidyr-cheatsheet.pdf)

:::


# Exercise time {background-color="#F5EDDE"}


[<i class='fas fa-laptop-code'></i>](https://anu-bdsi.github.io/workshop-data-wrangling-R1/materials.html#tabset-1-1-tab){.f-headline}

`r exercise_countdown(3)`