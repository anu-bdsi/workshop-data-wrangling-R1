---
title: Tidy data
subtitle: "[[ANU BDSI<br>workshop]{.tag-label} Data Wrangling with R [Part 1]{.part-label}]{.tag-workshop}"
format:
  anu-light-revealjs:
    width: 1920
    height: 1080
    auto-stretch: false
    html-math-method: katex
    self-contained: false
    css: 
      - assets/custom.css
      - assets/table.css
    footer: anu-bdsi.github.io/workshop-data-wrangling-R1/
author: Emi Tanaka
institute: Biological Data Science Institute
date: 2024/04/08
date-format: "D[th] MMMM YYYY"
filters:
  - webr
webr: 
  show-startup-message: false   
execute: 
  echo: true
---


# Welcome ðŸ‘‹


## Teaching team 

`r photo_path <- ""`

{{< include _team.qmd >}}



# Workshop materials

::: box

All materials will be hosted at<br> [<https://anu-bdsi.github.io/workshop-data-wrangling-R1/>]{.f1 target="_blank"}

:::

## Today's learning objectives 

```{r, include = FALSE}
library(tidyverse)
source("setup.R")
```


```{r}
#| results: asis 
#| echo: false
learning_objectives()
```



## {{< fa crosshairs >}} Current learning objective


```{r}
#| results: asis 
#| echo: false
learning_objectives(1)
```



## Tidy data 

::: callout-note

## Definition of a tidy data (Wickham, 2014)

* Each variable must have its own column
* Each observation must have its own row
* Each value must have its own cell

:::

<center>
<img src="images/tidy-data.svg" width="90%">
</center>


::: {.absolute bottom=0 .f3}

Wickham (2014) Tidy Data. *Journal of Statistical Software*

:::



## Is this tidy data? [Part 1]{.f2}

::: flex

::: {.w-50}

```{r, echo = FALSE}
df1 <- tibble(state = c("NSW", "VIC", "ACT"),
       `2019` = c(8130159, 6655284, 427892),
       `2018` = c(80366651, 6528601, 423169),
       `2017` = c(7919815, 6387081, 415874))
knitr::kable(df1, caption = "Estimated residential population in December") %>% 
  kableExtra::kable_styling()
```

:::

::: {.w-50 .pl3 .fragment}

```{r, echo = FALSE}
df1 %>% 
  pivot_longer(-state, names_to = "year", values_to = "population") %>% 
  knitr::kable(caption = "Estimated residential population in December") %>% 
  kableExtra::kable_styling()
```

:::

:::





::: {.absolute bottom=0 .f3}

Values adapted from Australian Bureau of Statistics. (2020). Table 04. Estimated Resident Population, States and Territories [Time series spreadsheet]. National, state and territory population, Australia Mar 2020. Retrieved Nov 24, 2020. https://www.abs.gov.au/statistics/people/population/national-state-and-territory-population/mar-2020/310104.xls

:::



## Is this tidy data? [Part 2]{.f2}



Total weekly personal income by age and sex from ABS 2016 Census


```{r, echo = FALSE}
# get package from 
# remotes::install_github("emitanaka/dwexercise")
data(census_2016_G17, package = "dwexercise")
data(census_2016_STE, package = "dwexercise")
census_2016_G17 %>% 
  knitr::kable() %>% 
  kableExtra::kable_styling()
```

What do you think the headers mean?


::: {.absolute bottom=0 .f3}

Based on Australian Bureau of Statistics 2016 Census Data

:::

<!-- Note: above is using citation instruction from CreativeCommons_Licensing_readme.txt in the data pack with slight addition of 2016 Census -->


<div class="bg-white" style="border:3px black solid;position:absolute;bottom:10px;right:10px;">
```{r, echo = FALSE, eval = TRUE}
census_2016_STE %>% 
  knitr::kable(caption = "STE Code") %>% 
  kableExtra::kable_styling(htmltable_class = "table ste")
```
</div>

::: fragment

<img style="border:3px black solid;position:absolute;top:22%;left:45%;" src="images/census-form.png">

:::

## Is this tidy data? [Part 3]{.f2} 

```{r, echo = FALSE, warning = FALSE, message = FALSE}
df3 <- census_2016_G17 %>% 
  pivot_longer(-STE_CODE_2016,
               values_to = "count",
               names_to = "group") %>%
  left_join(census_2016_STE, by = c("STE_CODE_2016" = "code")) %>% 
  select(state = name, group, count) 

df4 <- df3 %>% 
  filter(!str_detect(group, "Tot")) %>% 
  filter(!str_starts(group, "P")) %>% 
  extract(group, 
           into = c("sex", "income_min", "income_max", "age_min", "age_max"),
           regex = "^([FM])_(\\d+|Neg_Nil|Negtve_Nil|PI)_(\\d+|more|income|incme|NS_ns|NS)_(\\d+)_?(\\d+)?",
          remove = TRUE) %>% 
  mutate(income_min = case_when(str_detect(income_min, "Neg") ~ -Inf,
                                TRUE ~ as.numeric(income_min)),
         income_max = case_when(income_max %in% c("income", "incme") ~ 0,
                                income_max %in% "more" ~ Inf,
                                    TRUE ~ as.numeric(income_max)),
         age_min = as.numeric(age_min),
         age_max = ifelse(age_max=="", Inf, as.numeric(age_max))) |> 
  mutate(income_category = case_when(!is.finite(income_min) ~ "$0 or negative income",
                            !is.finite(income_max) ~ paste("More than $", income_min),
                            TRUE ~ paste0("$", income_min, "-", income_max)),
         age_category = case_when(!is.finite(age_max) ~ paste0(">=", age_min),
                         TRUE ~ paste0("[", age_min, ", ", age_max, ")")))
  
df4 %>% 
  select(state, sex, income_category, age_category, count) |> 
  head(9) %>% 
  knitr::kable(caption = "Total weekly personal income by age and sex") %>% 
  kableExtra::kable_styling()
```


::: {.absolute bottom=0 .f3}

Based on Australian Bureau of Statistics 2016 Census Data

:::



## Is this tidy data? [Part 4]{.f2}


::: flex

::: {.w-50}

```{r, echo = FALSE}
data(nass.barley, package = "agridat")
data(nass.wheat, package = "agridat")
df5 <- rbind(mutate(nass.barley, crop = "barley"), 
             mutate(nass.wheat, crop = "wheat")) %>% 
  select(year, state, crop, yield, acres) %>% 
  filter(state %in% c("Iowa", "Kansas")) %>% 
  filter(year %in% c(1900, 2000))
# have to shorten otherwise doesn't seem to be loading
# may have too many elements in html text area?
knitr::kable(select(df5, -acres), caption = "U.S. historical crop yields by state") %>% 
  kableExtra::kable_styling()
```

:::

::: {.w-50 .pl3}

```{r, echo = FALSE}
pivot_wider(select(df5, -acres), names_from = crop, values_from = yield, names_glue = "{crop}_yield") %>% 
  knitr::kable(caption = "U.S. historical crop yields by state") %>% 
  kableExtra::kable_styling()
```

:::

:::


::: {.absolute bottom=0 .f3}

United States Department of Agriculture, National Agricultural Statistics Service. http://quickstats.nass.usda.gov/

Kevin Wright (2020). agridat: Agricultural Datasets. R package version 1.17

:::



## Is this tidy data? [Part 5]{.f2}

::: flex

::: {.w-45}

```{r, echo = FALSE}
pivot_longer(df5, yield:acres, values_to = "value", names_to = "metric")  %>% 
  mutate(value = scales::comma(value)) %>% 
  knitr::kable(caption = "U.S. historical crop yields by state", align = "llllr") %>% 
  kableExtra::kable_styling()
  
```

:::

::: {.w-55 .pl3 .fragment}

```{r, echo = FALSE}
pivot_wider(df5, names_from = crop, values_from = c(yield, acres), names_glue = "{crop}_{.value}") %>% 
  knitr::kable(caption = "U.S. historical crop yields by state") %>% 
  kableExtra::kable_styling("striped")
```

:::

:::


::: {.absolute bottom=0 .f3 style="background-color:white;"}

United States Department of Agriculture, National Agricultural Statistics Service. http://quickstats.nass.usda.gov/

Kevin Wright (2020). agridat: Agricultural Datasets. R package version 1.17

:::


::: {.absolute bottom=0 .f3}


United States Department of Agriculture, National Agricultural Statistics Service. http://quickstats.nass.usda.gov/

Kevin Wright (2020). agridat: Agricultural Datasets. R package version 1.17

:::


<div class="bg-white fragment" style="position:absolute;bottom:10px;right:50px;">
```{r, echo = FALSE}
df5 %>% 
  knitr::kable() %>% 
  kableExtra::kable_styling(htmltable_class = "ste")
```
</div>


## Summary

::: callout-note

## Tidy data

* Each variable must have its own column
* Each observation must have its own row
* Each value must have its own cell

:::


![](images/tidy-data.png)


# Exercise time {background-color="#F5EDDE"}


[<i class='fas fa-laptop-code'></i>](https://anu-bdsi.github.io/workshop-data-wrangling-R1/materials.html#tabset-1-1-tab){.f-headline}

`r exercise_countdown(1)`

