---
title: "Joining two datasets"
subtitle: "[[ANU BDSI<br>workshop]{.tag-label} Data Wrangling with R [Part 1]{.part-label}]{.tag-workshop}"
format:
  anu-light-revealjs:
    width: 1920
    height: 1080
    auto-stretch: false
    html-math-method: katex
    self-contained: false
    css: assets/custom.css
    footer: anu-bdsi.github.io/workshop-data-wrangling-R1/
author: Emi Tanaka
institute: Biological Data Science Institute
date: 2024/04/08
date-format: "D[th] MMMM YYYY"
filters:
  - webr
webr: 
  show-startup-message: false  
  packages: 
    - tidyverse
---


## {{< fa crosshairs >}} Current learning objective

```{r}
#| include: false
library(tidyverse)
library(dm)
library(htmltools)
knit_print.grViz <- function(x, ..., options) {
  svg <- DiagrammeRsvg::export_svg(x)
  svg <- sub('[<]polygon fill="#ffffff"[^/]+/[>]\n', "", svg)
  path <- paste0("images/", options$label, ".svg")
  writeLines(svg, path)
  knitr::asis_output(paste0('<img src="', path, '"', ' width="', options$fig.width / 12 * 100, '%"',' />'))
}
vctrs::s3_register("knitr::knit_print", "grViz")
source("setup.R")
```

```{webr-r}
#| context: setup
library(tidyverse)
download.file("https://anu-bdsi.github.io/workshop-data-wrangling-R1/data/plots.csv", "plots.csv")
download.file("https://anu-bdsi.github.io/workshop-data-wrangling-R1/data/species.csv", "species.csv")
download.file("https://anu-bdsi.github.io/workshop-data-wrangling-R1/data/surveys.csv", "surveys.csv")

plots <- read_csv("plots.csv")
species <- read_csv("species.csv")
surveys <- read_csv("surveys.csv")
```

```{r}
#| results: asis 
#| echo: false
learning_objectives(5)
```



## Relational model {auto-animate=true}

::: flex

::: {.w-30  data-id="portals"}

```{r portals}
#| fig-width: 12
plots <- read_csv("../data/plots.csv")
species <- read_csv("../data/species.csv")
surveys <- read_csv("../data/surveys.csv")
dm(plots, species, surveys) |> 
  dm_add_pk(plots, plot_id) |> 
  dm_add_pk(surveys, record_id) |> 
  dm_add_pk(species, species_id) |>
  dm_add_fk(surveys, plot_id, plots) |> 
  dm_add_fk(surveys, species_id, species) |>
  dm_draw(rankdir = "LR", view_type = "all") 
```


:::

::: {.w-70 .pl3 .incremental}

- A **relational model** organizes data into one or more tables of columns and rows, with a unique key identifying each row based on Codd (1969, 1970). 
- Generally, each table represents one _entity type_.
- **Relational database** is a database based on the relational model of data. 

::: fragment

| Type | Tidy data | Relational model |
|:---|:---:|:---:|
| variable | column | attribute/field |
| observation | row | tuple/record |

:::

:::

:::








::: aside


Codd, E.F (1969), Derivability, Redundancy, and Consistency of Relations Stored in Large Data Banks, Research Report, IBM.  
Codd, E.F (1970). "A Relational Model of Data for Large Shared Data Banks". Communications of the ACM. Classics. 13 (6): 377â€“87. doi:10.1145/362384.362685. S2CID 207549016. Archived from the original on 2007-06-12.

:::

## Primary key {auto-animate=true}

::: flex

::: {.w-70 .pr3}

- A **_primary key_** (sometimes called _candidate key_) is the smallest subset of columns that uniquely identifies each row in a table.


```{webr-r}
surveys
plots
species
```



:::

::: {.w-30 data-id="portals"}

```{r portals}
#| fig-width: 12
```

:::



:::




::: aside

Data from Ernest, Morgan; Brown, James; Valone, Thomas; White, Ethan P. (2018). Portal Project Teaching Database. figshare. Dataset. <https://doi.org/10.6084/m9.figshare.1314459.v10>

:::

## Simple key & Compound key

::: flex

::: {.w-70 .incremental}

- If only a single column then it is called a **_simple key_**.
- If a key consists of more than one column then it is called a **_compound key_**.
- A table can also have no key (violating the relational model).

```{webr-r}
ChickWeight
chickwts
```

:::

::: {.w-30 .pl3}

<center>

```{r chickweight}
#| fig-width: 6
dm(ChickWeight) |> 
  dm_add_pk(ChickWeight, c(Time, Chick)) |> 
  dm_draw(rankdir = "LR", view_type = "all") 
```

```{r chickwts}
#| fig-width: 4.5
dm(chickwts) |> 
  dm_draw(rankdir = "LR", view_type = "all") 
```

</center>

:::

:::





## Foreign key


::: flex

::: {.w-70 .pr3}

- A **_foreign key_** is a column in one table that uniquely identifies a row in another table.




```{webr-r}
surveys
plots
species
```



:::

::: {.w-30 data-id="portals"}

```{r portals}
#| fig-width: 12
```

:::


:::

## Joining tables

- To join tables, we use the primary key in one table and the foreign key in another table.
- In a relational model, a database has **_referential integrity_** if all relations between tables are valid. E.g., 
  - All primary key values must be unique and not missing.
  - Each foreign key value must have a corresponding primary key value.
- In a relational model, **_normalization_** aims to keep data organization as clean and simple as possible by avoiding redundant data entries.




## Relationships 

- One-to-one 
- One-to-many
- Many-to-one
- Many-to-many


# Mutating join

from `dplyr`


## Joins from `dplyr`

```{webr-r}
left_join(survey, plots, by = "plot_id")  # most common
right_join(survey, plots, by = "plot_id")
full_join(survey, plots, by = "plot_id")
```


## Summary

- **Relational data** consists of multiple, linked tables.
- **Primary keys** uniquely identify each record in a table.
- **Foreign keys** link tables together.

::: {.panel-tabset style="font-size:0.65em;"}

## Left join

<center>

![](images/left-join.gif)

</center>

## Left join (extra)

<center>

![](images/left-join-extra.gif)

</center>

## Right join

<center>

![](images/right-join.gif)

</center>

## Semi join

<center>

![](images/semi-join.gif)

</center>

## Set diff

![](images/setdiff.gif)

## Set diff (reverse)

<center>

![](images/setdiff-rev.gif)

</center>


## Anti join

<center>

![](images/anti-join.gif)

</center>

## Full join

<center>

![](images/full-join.gif)
</center>


## Inner join

<center>

![](images/inner-join.gif)
</center>

## Intersect

<center>

![](images/intersect.gif)
</center>



:::


# Exercise time {background-color="#F5EDDE"}


[<i class='fas fa-laptop-code'></i>](https://anu-bdsi.github.io/workshop-data-wrangling-R1/materials.html#tabset-1-1-tab){.f-headline}

`r exercise_countdown(1)`
